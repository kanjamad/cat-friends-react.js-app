{"version":3,"sources":["components/Card/Card.js","components/CardList/CardLists.js","components/SearchBox/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","username","phone","website","company","address","className","alt","src","street","suite","city","zipcode","catchPhrase","bs","CardLists","robots","map","user","i","SearchBox","searchfield","searchChange","placeholder","type","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA0CeA,EAvCF,SAAC,GASP,IARLC,EAQI,EARJA,KACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,GACAC,EAKI,EALJA,SACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,QACAC,EACI,EADJA,QAEA,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,SACJC,IAAG,+BAA0BR,EAA1B,4BAEL,gCACE,6BAAKF,IACL,2CAAcG,KACd,uCAAUF,KACV,gCACE,yCACA,yCAAYM,EAAQI,UACpB,wCAAWJ,EAAQK,SACnB,uCAAUL,EAAQM,QAClB,0CAAaN,EAAQO,cAEvB,4BAAIV,IACJ,yCAAYC,KACZ,+BACE,4CAAeC,EAAQN,QACvB,gDAAmBM,EAAQS,eAC3B,uCAAUT,EAAQU,gBCTbC,G,MAtBG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,qBAAKV,UAAU,YAAf,SACGU,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEErB,KAAMkB,EAAOG,GAAGrB,KAChBC,MAAOiB,EAAOG,GAAGpB,MACjBE,SAAUe,EAAOG,GAAGlB,SACpBD,GAAIgB,EAAOG,GAAGnB,GACdE,MAAOc,EAAOG,GAAGjB,MACjBC,QAASa,EAAOG,GAAGhB,QACnBC,QAASY,EAAOG,GAAGf,QACnBC,QAASW,EAAOG,GAAGd,SARdc,UCMFC,G,MAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,8BACE,uBACEhB,UAAU,SACViB,YAAY,aACZC,KAAK,SACLC,SAAUH,QCEHI,EAVA,SAACC,GACd,OACE,qBACEC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SADlE,SAGGJ,EAAMK,YCuCEC,G,wDAvCb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAf1C,EAAKC,MAAQ,CACXvB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBmB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAQ9B,WAAU,IAAD,EACyBC,KAAKN,MAA7BvB,EADD,EACCA,OAAQK,EADT,EACSA,YACVyB,EAAiB9B,EAAO+B,QAAO,SAACC,GACpC,OAAOA,EAAMlD,KAAKmD,cAAcC,SAAS7B,EAAY4B,kBAEvD,OAAQjC,EAAOmC,OAGb,sBAAK7C,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CAAWgB,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ8B,SANtB,6C,GA3BYM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ff99f4cf.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = ({\n  name,\n  email,\n  id,\n  username,\n  phone,\n  website,\n  company,\n  address,\n}) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"robots\"\n        src={`https://robohash.org/${id}?set=set4&size=180x180`}\n      />\n      <div>\n        <h2>{name}</h2>\n        <p>username: {username}</p>\n        <p>email:{email}</p>\n        <div>\n          <h3>Address</h3>\n          <p>street: {address.street}</p>\n          <p>suite: {address.suite}</p>\n          <p>city: {address.city}</p>\n          <p>zipcode: {address.zipcode}</p>\n        </div>\n        <p>{phone}</p>\n        <p>website:{website}</p>\n        <ul>\n          <li>company : {company.name}</li>\n          <li>catchPhrase : {company.catchPhrase}</li>\n          <li>bs : {company.bs}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../Card/Card\";\nimport \"./Cardlist.css\";\n\nconst CardLists = ({ robots }) => {\n  return (\n    <div className=\"card-list\">\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            name={robots[i].name}\n            email={robots[i].email}\n            username={robots[i].username}\n            id={robots[i].id}\n            phone={robots[i].phone}\n            website={robots[i].website}\n            company={robots[i].company}\n            address={robots[i].address}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardLists;\n","import React from \"react\";\nimport \"./SearchBox.css\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div>\n      <input\n        className=\"search\"\n        placeholder=\"search cat\"\n        type=\"search\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"800px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList/CardLists\";\nimport SearchBox from \"../components/SearchBox/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState({ robots: users });\n      });\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"App\">\n        <h1>Cat Friends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
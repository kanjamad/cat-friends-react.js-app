{"version":3,"sources":["components/Card/Card.js","components/CardList/CardLists.js","components/SearchBox/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","toggleButton","setState","showInfo","state","this","name","email","id","username","phone","website","company","address","className","alt","src","onClick","street","suite","city","zipcode","catchPhrase","bs","Component","CardLists","robots","map","user","i","SearchBox","searchfield","searchChange","placeholder","type","onChange","Scroll","style","overflow","border","height","children","App","useState","setRobots","setSearchfield","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAyDeA,E,kDArDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,aAAe,WACb,EAAKC,SAAS,CACZC,UAAW,EAAKC,MAAMD,YAPxB,EAAKC,MAAQ,CACXD,UAAU,GAHK,E,0CAanB,WAAU,IAAD,EAELE,KAAKL,MADCM,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,GAAIC,EADlB,EACkBA,SAAUC,EAD5B,EAC4BA,MAAOC,EADnC,EACmCA,QAASC,EAD5C,EAC4CA,QAASC,EADrD,EACqDA,QAG5D,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,SACJC,IAAG,+BAA0BR,EAA1B,4BAEL,6BAAKF,IACL,uCAAUC,KACV,sCACO,IACL,sBAAMU,QAASZ,KAAKJ,aAApB,SACE,mBAAGa,UAAU,kCAGhBT,KAAKD,MAAMD,UACV,oCACE,2CAAcM,KACd,yCACA,yCAAYI,EAAQK,UACpB,wCAAWL,EAAQM,SACnB,uCAAUN,EAAQO,QAClB,0CAAaP,EAAQQ,WACrB,4BAAIX,IACJ,yCAAYC,KACZ,+BACE,4CAAeC,EAAQN,QACvB,gDAAmBM,EAAQU,eAC3B,uCAAUV,EAAQW,mB,GA7CbC,aCuBJC,G,MAtBG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,qBAAKZ,UAAU,YAAf,SACGY,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEEvB,KAAMoB,EAAOG,GAAGvB,KAChBC,MAAOmB,EAAOG,GAAGtB,MACjBE,SAAUiB,EAAOG,GAAGpB,SACpBD,GAAIkB,EAAOG,GAAGrB,GACdE,MAAOgB,EAAOG,GAAGnB,MACjBC,QAASe,EAAOG,GAAGlB,QACnBC,QAASc,EAAOG,GAAGjB,QACnBC,QAASa,EAAOG,GAAGhB,SARdgB,UCMFC,G,MAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,8BACE,uBACElB,UAAU,SACVmB,YAAY,aACZC,KAAK,SACLC,SAAUH,QCEHI,EAVA,SAACpC,GACd,OACE,qBACEqC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SADlE,SAGGxC,EAAMyC,Y,MCgCEC,MAjCf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNjB,EADM,KACEkB,EADF,OAEyBD,mBAAS,IAFlC,mBAENZ,EAFM,KAEOc,EAFP,KAIbC,qBAAU,WAERC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLP,EAAUO,QAEb,IAEH,IAIMC,EAAiB1B,EAAO2B,QAAO,SAACC,GACpC,OAAOA,EAAMhD,KAAKiD,cAAcC,SAASzB,EAAYwB,kBAEvD,OAAQ7B,EAAO+B,OAGb,sBAAK3C,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CAAWkB,aAZQ,SAAC0B,GACtBb,EAAea,EAAMC,OAAOC,UAY1B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlC,OAAQ0B,SANtB,0CCfWS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.68f577de.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Card.css\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showInfo: false,\n    };\n  }\n\n  toggleButton = () => {\n    this.setState({\n      showInfo: !this.state.showInfo,\n    });\n  };\n\n  render() {\n    const { name, email, id, username, phone, website, company, address } =\n      this.props;\n\n    return (\n      <div className=\"card-container\">\n        <img\n          alt=\"robots\"\n          src={`https://robohash.org/${id}?set=set4&size=180x180`}\n        />\n        <h2>{name}</h2>\n        <p>email:{email}</p>\n        <h4>\n          info{\" \"}\n          <span onClick={this.toggleButton}>\n            <i className=\"fas fa-caret-square-down\"></i>\n          </span>\n        </h4>\n        {this.state.showInfo && (\n          <section>\n            <p>username: {username}</p>\n            <h4>Address</h4>\n            <p>street: {address.street}</p>\n            <p>suite: {address.suite}</p>\n            <p>city: {address.city}</p>\n            <p>zipcode: {address.zipcode}</p>\n            <p>{phone}</p>\n            <p>website:{website}</p>\n            <ul>\n              <li>company : {company.name}</li>\n              <li>catchPhrase : {company.catchPhrase}</li>\n              <li>bs : {company.bs}</li>\n            </ul>\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../Card/Card\";\nimport \"./Cardlist.css\";\n\nconst CardLists = ({ robots }) => {\n  return (\n    <div className=\"card-list\">\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            name={robots[i].name}\n            email={robots[i].email}\n            username={robots[i].username}\n            id={robots[i].id}\n            phone={robots[i].phone}\n            website={robots[i].website}\n            company={robots[i].company}\n            address={robots[i].address}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardLists;\n","import React from \"react\";\nimport \"./SearchBox.css\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div>\n      <input\n        className=\"search\"\n        placeholder=\"search cat\"\n        type=\"search\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"800px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { useState, useEffect } from \"react\";\nimport CardList from \"../components/CardList/CardLists\";\nimport SearchBox from \"../components/SearchBox/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport \"./App.css\";\n\nfunction App() {\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState(\"\");\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        setRobots(users);\n      });\n  }, []);\n\n  const onSearchChange = (event) => {\n    setSearchfield(event.target.value);\n  };\n\n  const filteredRobots = robots.filter((robot) => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n  return !robots.length ? (\n    <h1>Loading</h1>\n  ) : (\n    <div className=\"App\">\n      <h1>Cat Friends</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <CardList robots={filteredRobots} />\n      </Scroll>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}